"""
给你一个由若干 0 和 1 组成的字符串 s ，请你计算并返回将该字符串分割成两个 非空 子字符串（即 左 子字符串和 右 子字符串）所能获得的最大得分。

「分割字符串的得分」为 左 子字符串中 0 的数量加上 右 子字符串中 1 的数量。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-score-after-splitting-a-string
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
1. 遍历 得出结果
2. 动态规划
"""

class Solution:
    def maxScore(self, s: str) -> int:
        count_0, count_1 = 0, 0
        for i in s:
            if i == '0':
                count_0 += 1
            else:
                count_1 += 1
        dp = [0 for _ in s]
        dp[0] = count_1 -1 if s[0] == '1' else count_1 + 1
        for i in range(1, len(s) - 1):
            if s[i] == '0':
                dp[i] = dp[i-1] + 1
            else:
                dp[i] = dp[i-1] - 1
        return max(dp)
